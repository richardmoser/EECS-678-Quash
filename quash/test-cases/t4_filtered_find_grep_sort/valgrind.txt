==2374426== Memcheck, a memory error detector
==2374426== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2374426== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2374426== Command: /home/j242h828/EECS_678/Project1/quash/quash
==2374426== 
==2374543== Syscall param openat(filename) points to unaddressable byte(s)
==2374543==    at 0x498E6EB: open (open64.c:41)
==2374543==    by 0x4906135: _IO_file_open (fileops.c:188)
==2374543==    by 0x4906491: _IO_file_fopen@@GLIBC_2.2.5 (fileops.c:280)
==2374543==    by 0x48F972D: __fopen_internal (iofopen.c:75)
==2374543==    by 0x48F972D: fopen@@GLIBC_2.2.5 (iofopen.c:86)
==2374543==    by 0x10D8A4: create_process (execute.c:433)
==2374543==    by 0x10DB62: run_script (execute.c:491)
==2374543==    by 0x10A976: main (quash.c:121)
==2374543==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2374543== 
==2374543== Invalid read of size 4
==2374543==    at 0x49015A4: fileno (fileno.c:35)
==2374543==    by 0x10D8B4: create_process (execute.c:434)
==2374543==    by 0x10DB62: run_script (execute.c:491)
==2374543==    by 0x10A976: main (quash.c:121)
==2374543==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2374543== 
==2374543== 
==2374543== Process terminating with default action of signal 11 (SIGSEGV)
==2374543==  Access not within mapped region at address 0x0
==2374543==    at 0x49015A4: fileno (fileno.c:35)
==2374543==    by 0x10D8B4: create_process (execute.c:434)
==2374543==    by 0x10DB62: run_script (execute.c:491)
==2374543==    by 0x10A976: main (quash.c:121)
==2374543==  If you believe this happened as a result of a stack
==2374543==  overflow in your program's main thread (unlikely but
==2374543==  possible), you can try to increase the size of the
==2374543==  main thread stack using the --main-stacksize= flag.
==2374543==  The main thread stack size used in this run was 8388608.
==2374543== 
==2374543== HEAP SUMMARY:
==2374543==     in use at exit: 27,970 bytes in 9 blocks
==2374543==   total heap usage: 19 allocs, 10 frees, 30,354 bytes allocated
==2374543== 
==2374543== LEAK SUMMARY:
==2374543==    definitely lost: 0 bytes in 0 blocks
==2374543==    indirectly lost: 0 bytes in 0 blocks
==2374543==      possibly lost: 0 bytes in 0 blocks
==2374543==    still reachable: 27,970 bytes in 9 blocks
==2374543==         suppressed: 0 bytes in 0 blocks
==2374543== Reachable blocks (those to which a pointer was found) are not shown.
==2374543== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2374543== 
==2374543== For lists of detected and suppressed errors, rerun with: -s
==2374543== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==2374637== Syscall param openat(filename) points to unaddressable byte(s)
==2374637==    at 0x498E6EB: open (open64.c:41)
==2374637==    by 0x4906135: _IO_file_open (fileops.c:188)
==2374637==    by 0x4906491: _IO_file_fopen@@GLIBC_2.2.5 (fileops.c:280)
==2374637==    by 0x48F972D: __fopen_internal (iofopen.c:75)
==2374637==    by 0x48F972D: fopen@@GLIBC_2.2.5 (iofopen.c:86)
==2374637==    by 0x10D8A4: create_process (execute.c:433)
==2374637==    by 0x10DB62: run_script (execute.c:491)
==2374637==    by 0x10A976: main (quash.c:121)
==2374637==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2374637== 
==2374637== Invalid read of size 4
==2374637==    at 0x49015A4: fileno (fileno.c:35)
==2374637==    by 0x10D8B4: create_process (execute.c:434)
==2374637==    by 0x10DB62: run_script (execute.c:491)
==2374637==    by 0x10A976: main (quash.c:121)
==2374637==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2374637== 
==2374637== 
==2374637== Process terminating with default action of signal 11 (SIGSEGV)
==2374637==  Access not within mapped region at address 0x0
==2374637==    at 0x49015A4: fileno (fileno.c:35)
==2374637==    by 0x10D8B4: create_process (execute.c:434)
==2374637==    by 0x10DB62: run_script (execute.c:491)
==2374637==    by 0x10A976: main (quash.c:121)
==2374637==  If you believe this happened as a result of a stack
==2374637==  overflow in your program's main thread (unlikely but
==2374637==  possible), you can try to increase the size of the
==2374637==  main thread stack using the --main-stacksize= flag.
==2374637==  The main thread stack size used in this run was 8388608.
==2374637== 
==2374637== HEAP SUMMARY:
==2374637==     in use at exit: 25,922 bytes in 8 blocks
==2374637==   total heap usage: 26 allocs, 18 frees, 31,754 bytes allocated
==2374637== 
==2374637== LEAK SUMMARY:
==2374637==    definitely lost: 0 bytes in 0 blocks
==2374637==    indirectly lost: 0 bytes in 0 blocks
==2374637==      possibly lost: 0 bytes in 0 blocks
==2374637==    still reachable: 25,922 bytes in 8 blocks
==2374637==         suppressed: 0 bytes in 0 blocks
==2374637== Reachable blocks (those to which a pointer was found) are not shown.
==2374637== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2374637== 
==2374637== For lists of detected and suppressed errors, rerun with: -s
==2374637== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
==2374426== 
==2374426== HEAP SUMMARY:
==2374426==     in use at exit: 0 bytes in 1 blocks
==2374426==   total heap usage: 25 allocs, 24 frees, 31,282 bytes allocated
==2374426== 
==2374426== LEAK SUMMARY:
==2374426==    definitely lost: 0 bytes in 0 blocks
==2374426==    indirectly lost: 0 bytes in 0 blocks
==2374426==      possibly lost: 0 bytes in 0 blocks
==2374426==    still reachable: 0 bytes in 1 blocks
==2374426==         suppressed: 0 bytes in 0 blocks
==2374426== Reachable blocks (those to which a pointer was found) are not shown.
==2374426== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==2374426== 
==2374426== For lists of detected and suppressed errors, rerun with: -s
==2374426== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
